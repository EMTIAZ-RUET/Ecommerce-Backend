name: E-Commerce CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Run Tests
        run: mvn test

      - name: SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn sonar:sonar -Dsonar.host.url=http://localhost:9000

      - name: Build Docker images
        run: |
          docker-compose build
          docker tag ironsoftware/api-gateway:latest ${{ secrets.DOCKER_REGISTRY }}/ironsoftware/api-gateway:${{ github.sha }}
          docker tag ironsoftware/product-service:latest ${{ secrets.DOCKER_REGISTRY }}/ironsoftware/product-service:${{ github.sha }}
          # Add other services...

      - name: Push Docker images
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin ${{ secrets.DOCKER_REGISTRY }}
          docker push ${{ secrets.DOCKER_REGISTRY }}/ironsoftware/api-gateway:${{ github.sha }}
          docker push ${{ secrets.DOCKER_REGISTRY }}/ironsoftware/product-service:${{ github.sha }}
          # Add other services...

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Deploy to Dev K8s
        uses: azure/k8s-deploy@v1
        with:
          manifests: |
            k8s/api-gateway.yml
            k8s/product-service.yml
            # Add other services...
          images: |
            ${{ secrets.DOCKER_REGISTRY }}/ironsoftware/api-gateway:${{ github.sha }}
            ${{ secrets.DOCKER_REGISTRY }}/ironsoftware/product-service:${{ github.sha }}

  deploy-prod:
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment: production
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to Prod K8s
        uses: azure/k8s-deploy@v1
        with:
          manifests: |
            k8s/api-gateway.yml
            k8s/product-service.yml
            # Add other services...
          images: |
            ${{ secrets.DOCKER_REGISTRY }}/ironsoftware/api-gateway:${{ github.sha }}
            ${{ secrets.DOCKER_REGISTRY }}/ironsoftware/product-service:${{ github.sha }}
